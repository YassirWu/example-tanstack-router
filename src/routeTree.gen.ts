/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SearchImport } from './routes/search'
import { Route as IndexImport } from './routes/index'
import { Route as PokemonsIndexImport } from './routes/pokemons.index'
import { Route as PokemonsIdImport } from './routes/pokemons.$id'

// Create Virtual Routes

const PokemonsTypesIndexLazyImport = createFileRoute('/pokemons-types/')()
const PokemonsTypesTypePokemonsLazyImport = createFileRoute(
  '/pokemons-types/$type/pokemons',
)()

// Create/Update Routes

const SearchRoute = SearchImport.update({
  path: '/search',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PokemonsTypesIndexLazyRoute = PokemonsTypesIndexLazyImport.update({
  path: '/pokemons-types/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/pokemons-types.index.lazy').then((d) => d.Route),
)

const PokemonsIndexRoute = PokemonsIndexImport.update({
  path: '/pokemons/',
  getParentRoute: () => rootRoute,
} as any)

const PokemonsIdRoute = PokemonsIdImport.update({
  path: '/pokemons/$id',
  getParentRoute: () => rootRoute,
} as any)

const PokemonsTypesTypePokemonsLazyRoute =
  PokemonsTypesTypePokemonsLazyImport.update({
    path: '/pokemons-types/$type/pokemons',
    getParentRoute: () => rootRoute,
  } as any).lazy(() =>
    import('./routes/pokemons-types.$type.pokemons.lazy').then((d) => d.Route),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/search': {
      id: '/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof SearchImport
      parentRoute: typeof rootRoute
    }
    '/pokemons/$id': {
      id: '/pokemons/$id'
      path: '/pokemons/$id'
      fullPath: '/pokemons/$id'
      preLoaderRoute: typeof PokemonsIdImport
      parentRoute: typeof rootRoute
    }
    '/pokemons/': {
      id: '/pokemons/'
      path: '/pokemons'
      fullPath: '/pokemons'
      preLoaderRoute: typeof PokemonsIndexImport
      parentRoute: typeof rootRoute
    }
    '/pokemons-types/': {
      id: '/pokemons-types/'
      path: '/pokemons-types'
      fullPath: '/pokemons-types'
      preLoaderRoute: typeof PokemonsTypesIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/pokemons-types/$type/pokemons': {
      id: '/pokemons-types/$type/pokemons'
      path: '/pokemons-types/$type/pokemons'
      fullPath: '/pokemons-types/$type/pokemons'
      preLoaderRoute: typeof PokemonsTypesTypePokemonsLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  SearchRoute,
  PokemonsIdRoute,
  PokemonsIndexRoute,
  PokemonsTypesIndexLazyRoute,
  PokemonsTypesTypePokemonsLazyRoute,
})

/* prettier-ignore-end */
